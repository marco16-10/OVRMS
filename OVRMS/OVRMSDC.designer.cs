#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OVRMS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OVRMS")]
	public partial class OVRMSDCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVehicleCategory(VehicleCategory instance);
    partial void UpdateVehicleCategory(VehicleCategory instance);
    partial void DeleteVehicleCategory(VehicleCategory instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertPayroll(Payroll instance);
    partial void UpdatePayroll(Payroll instance);
    partial void DeletePayroll(Payroll instance);
    partial void InsertRental(Rental instance);
    partial void UpdateRental(Rental instance);
    partial void DeleteRental(Rental instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    #endregion
		
		public OVRMSDCDataContext() : 
				base(global::OVRMS.Properties.Settings.Default.OVRMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OVRMSDCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OVRMSDCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OVRMSDCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OVRMSDCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VehicleCategory> VehicleCategories
		{
			get
			{
				return this.GetTable<VehicleCategory>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Payroll> Payrolls
		{
			get
			{
				return this.GetTable<Payroll>();
			}
		}
		
		public System.Data.Linq.Table<Rental> Rentals
		{
			get
			{
				return this.GetTable<Rental>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<v_Rental> v_Rentals
		{
			get
			{
				return this.GetTable<v_Rental>();
			}
		}
		
		public System.Data.Linq.Table<v_Vehicle> v_Vehicles
		{
			get
			{
				return this.GetTable<v_Vehicle>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleCategory")]
	public partial class VehicleCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCategory;
		
		private string _Name;
		
		private System.Nullable<decimal> _DailyRate;
		
		private string _Description;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategoryChanging(int value);
    partial void OnIdCategoryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDailyRateChanging(System.Nullable<decimal> value);
    partial void OnDailyRateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public VehicleCategory()
		{
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategory", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCategory
		{
			get
			{
				return this._IdCategory;
			}
			set
			{
				if ((this._IdCategory != value))
				{
					this.OnIdCategoryChanging(value);
					this.SendPropertyChanging();
					this._IdCategory = value;
					this.SendPropertyChanged("IdCategory");
					this.OnIdCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyRate", DbType="Money")]
		public System.Nullable<decimal> DailyRate
		{
			get
			{
				return this._DailyRate;
			}
			set
			{
				if ((this._DailyRate != value))
				{
					this.OnDailyRateChanging(value);
					this.SendPropertyChanging();
					this._DailyRate = value;
					this.SendPropertyChanged("DailyRate");
					this.OnDailyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleCategory_Vehicle", Storage="_Vehicles", ThisKey="IdCategory", OtherKey="IdCategory")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleCategory = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdInvoice;
		
		private System.Nullable<int> _IdRental;
		
		private System.Nullable<decimal> _SubTotal;
		
		private System.Nullable<decimal> _TaxTotal;
		
		private System.Nullable<decimal> _GrandTotal;
		
		private System.Nullable<decimal> _AmountPaid;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private System.Nullable<System.DateTime> _PaidDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _Notes;
		
		private EntityRef<Rental> _Rental;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdInvoiceChanging(int value);
    partial void OnIdInvoiceChanged();
    partial void OnIdRentalChanging(System.Nullable<int> value);
    partial void OnIdRentalChanged();
    partial void OnSubTotalChanging(System.Nullable<decimal> value);
    partial void OnSubTotalChanged();
    partial void OnTaxTotalChanging(System.Nullable<decimal> value);
    partial void OnTaxTotalChanged();
    partial void OnGrandTotalChanging(System.Nullable<decimal> value);
    partial void OnGrandTotalChanged();
    partial void OnAmountPaidChanging(System.Nullable<decimal> value);
    partial void OnAmountPaidChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnPaidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaidDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Invoice()
		{
			this._Rental = default(EntityRef<Rental>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInvoice", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdInvoice
		{
			get
			{
				return this._IdInvoice;
			}
			set
			{
				if ((this._IdInvoice != value))
				{
					this.OnIdInvoiceChanging(value);
					this.SendPropertyChanging();
					this._IdInvoice = value;
					this.SendPropertyChanged("IdInvoice");
					this.OnIdInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRental", DbType="Int")]
		public System.Nullable<int> IdRental
		{
			get
			{
				return this._IdRental;
			}
			set
			{
				if ((this._IdRental != value))
				{
					if (this._Rental.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRentalChanging(value);
					this.SendPropertyChanging();
					this._IdRental = value;
					this.SendPropertyChanged("IdRental");
					this.OnIdRentalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Money")]
		public System.Nullable<decimal> SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this.OnSubTotalChanging(value);
					this.SendPropertyChanging();
					this._SubTotal = value;
					this.SendPropertyChanged("SubTotal");
					this.OnSubTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxTotal", DbType="Money")]
		public System.Nullable<decimal> TaxTotal
		{
			get
			{
				return this._TaxTotal;
			}
			set
			{
				if ((this._TaxTotal != value))
				{
					this.OnTaxTotalChanging(value);
					this.SendPropertyChanging();
					this._TaxTotal = value;
					this.SendPropertyChanged("TaxTotal");
					this.OnTaxTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrandTotal", DbType="Money")]
		public System.Nullable<decimal> GrandTotal
		{
			get
			{
				return this._GrandTotal;
			}
			set
			{
				if ((this._GrandTotal != value))
				{
					this.OnGrandTotalChanging(value);
					this.SendPropertyChanging();
					this._GrandTotal = value;
					this.SendPropertyChanged("GrandTotal");
					this.OnGrandTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Money")]
		public System.Nullable<decimal> AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaidDate
		{
			get
			{
				return this._PaidDate;
			}
			set
			{
				if ((this._PaidDate != value))
				{
					this.OnPaidDateChanging(value);
					this.SendPropertyChanging();
					this._PaidDate = value;
					this.SendPropertyChanged("PaidDate");
					this.OnPaidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rental_Invoice", Storage="_Rental", ThisKey="IdRental", OtherKey="IdRental", IsForeignKey=true)]
		public Rental Rental
		{
			get
			{
				return this._Rental.Entity;
			}
			set
			{
				Rental previousValue = this._Rental.Entity;
				if (((previousValue != value) 
							|| (this._Rental.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rental.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Rental.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._IdRental = value.IdRental;
					}
					else
					{
						this._IdRental = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rental");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payroll")]
	public partial class Payroll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPayroll;
		
		private System.Nullable<int> _IdEmployee;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private System.Nullable<decimal> _HoursOvertime;
		
		private System.Nullable<decimal> _HoursRegular;
		
		private System.Nullable<decimal> _KiwiSaverDeduction;
		
		private System.Nullable<decimal> _GrossEarning;
		
		private System.Nullable<decimal> _DonationTaxCredit;
		
		private System.Nullable<decimal> _Tax;
		
		private System.Nullable<decimal> _StudentLoadRepayment;
		
		private System.Nullable<decimal> _PayrollDonation;
		
		private System.Nullable<decimal> _TotalPayment;
		
		private System.Nullable<decimal> _KiwiSaverEmployerContribution;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPayrollChanging(int value);
    partial void OnIdPayrollChanged();
    partial void OnIdEmployeeChanging(System.Nullable<int> value);
    partial void OnIdEmployeeChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFromChanged();
    partial void OnDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToChanged();
    partial void OnHoursOvertimeChanging(System.Nullable<decimal> value);
    partial void OnHoursOvertimeChanged();
    partial void OnHoursRegularChanging(System.Nullable<decimal> value);
    partial void OnHoursRegularChanged();
    partial void OnKiwiSaverDeductionChanging(System.Nullable<decimal> value);
    partial void OnKiwiSaverDeductionChanged();
    partial void OnGrossEarningChanging(System.Nullable<decimal> value);
    partial void OnGrossEarningChanged();
    partial void OnDonationTaxCreditChanging(System.Nullable<decimal> value);
    partial void OnDonationTaxCreditChanged();
    partial void OnTaxChanging(System.Nullable<decimal> value);
    partial void OnTaxChanged();
    partial void OnStudentLoadRepaymentChanging(System.Nullable<decimal> value);
    partial void OnStudentLoadRepaymentChanged();
    partial void OnPayrollDonationChanging(System.Nullable<decimal> value);
    partial void OnPayrollDonationChanged();
    partial void OnTotalPaymentChanging(System.Nullable<decimal> value);
    partial void OnTotalPaymentChanged();
    partial void OnKiwiSaverEmployerContributionChanging(System.Nullable<decimal> value);
    partial void OnKiwiSaverEmployerContributionChanged();
    #endregion
		
		public Payroll()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPayroll", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPayroll
		{
			get
			{
				return this._IdPayroll;
			}
			set
			{
				if ((this._IdPayroll != value))
				{
					this.OnIdPayrollChanging(value);
					this.SendPropertyChanging();
					this._IdPayroll = value;
					this.SendPropertyChanged("IdPayroll");
					this.OnIdPayrollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmployee", DbType="Int")]
		public System.Nullable<int> IdEmployee
		{
			get
			{
				return this._IdEmployee;
			}
			set
			{
				if ((this._IdEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IdEmployee = value;
					this.SendPropertyChanged("IdEmployee");
					this.OnIdEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursOvertime", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> HoursOvertime
		{
			get
			{
				return this._HoursOvertime;
			}
			set
			{
				if ((this._HoursOvertime != value))
				{
					this.OnHoursOvertimeChanging(value);
					this.SendPropertyChanging();
					this._HoursOvertime = value;
					this.SendPropertyChanged("HoursOvertime");
					this.OnHoursOvertimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursRegular", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> HoursRegular
		{
			get
			{
				return this._HoursRegular;
			}
			set
			{
				if ((this._HoursRegular != value))
				{
					this.OnHoursRegularChanging(value);
					this.SendPropertyChanging();
					this._HoursRegular = value;
					this.SendPropertyChanged("HoursRegular");
					this.OnHoursRegularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KiwiSaverDeduction", DbType="Money")]
		public System.Nullable<decimal> KiwiSaverDeduction
		{
			get
			{
				return this._KiwiSaverDeduction;
			}
			set
			{
				if ((this._KiwiSaverDeduction != value))
				{
					this.OnKiwiSaverDeductionChanging(value);
					this.SendPropertyChanging();
					this._KiwiSaverDeduction = value;
					this.SendPropertyChanged("KiwiSaverDeduction");
					this.OnKiwiSaverDeductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossEarning", DbType="Money")]
		public System.Nullable<decimal> GrossEarning
		{
			get
			{
				return this._GrossEarning;
			}
			set
			{
				if ((this._GrossEarning != value))
				{
					this.OnGrossEarningChanging(value);
					this.SendPropertyChanging();
					this._GrossEarning = value;
					this.SendPropertyChanged("GrossEarning");
					this.OnGrossEarningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationTaxCredit", DbType="Money")]
		public System.Nullable<decimal> DonationTaxCredit
		{
			get
			{
				return this._DonationTaxCredit;
			}
			set
			{
				if ((this._DonationTaxCredit != value))
				{
					this.OnDonationTaxCreditChanging(value);
					this.SendPropertyChanging();
					this._DonationTaxCredit = value;
					this.SendPropertyChanged("DonationTaxCredit");
					this.OnDonationTaxCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Money")]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentLoadRepayment", DbType="Money")]
		public System.Nullable<decimal> StudentLoadRepayment
		{
			get
			{
				return this._StudentLoadRepayment;
			}
			set
			{
				if ((this._StudentLoadRepayment != value))
				{
					this.OnStudentLoadRepaymentChanging(value);
					this.SendPropertyChanging();
					this._StudentLoadRepayment = value;
					this.SendPropertyChanged("StudentLoadRepayment");
					this.OnStudentLoadRepaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollDonation", DbType="Money")]
		public System.Nullable<decimal> PayrollDonation
		{
			get
			{
				return this._PayrollDonation;
			}
			set
			{
				if ((this._PayrollDonation != value))
				{
					this.OnPayrollDonationChanging(value);
					this.SendPropertyChanging();
					this._PayrollDonation = value;
					this.SendPropertyChanged("PayrollDonation");
					this.OnPayrollDonationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayment", DbType="Money")]
		public System.Nullable<decimal> TotalPayment
		{
			get
			{
				return this._TotalPayment;
			}
			set
			{
				if ((this._TotalPayment != value))
				{
					this.OnTotalPaymentChanging(value);
					this.SendPropertyChanging();
					this._TotalPayment = value;
					this.SendPropertyChanged("TotalPayment");
					this.OnTotalPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KiwiSaverEmployerContribution", DbType="Money")]
		public System.Nullable<decimal> KiwiSaverEmployerContribution
		{
			get
			{
				return this._KiwiSaverEmployerContribution;
			}
			set
			{
				if ((this._KiwiSaverEmployerContribution != value))
				{
					this.OnKiwiSaverEmployerContributionChanging(value);
					this.SendPropertyChanging();
					this._KiwiSaverEmployerContribution = value;
					this.SendPropertyChanged("KiwiSaverEmployerContribution");
					this.OnKiwiSaverEmployerContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Payroll", Storage="_Employee", ThisKey="IdEmployee", OtherKey="IdEmp", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Payrolls.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Payrolls.Add(this);
						this._IdEmployee = value.IdEmp;
					}
					else
					{
						this._IdEmployee = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rental")]
	public partial class Rental : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdRental;
		
		private System.Nullable<int> _IdCustomer;
		
		private System.Nullable<int> _IdVehicle;
		
		private System.Nullable<System.DateTime> _RentalExpStartDate;
		
		private System.Nullable<System.DateTime> _RentalExpEndtDate;
		
		private System.Nullable<System.DateTime> _RentalActStartDate;
		
		private System.Nullable<System.DateTime> _RentalActEndDate;
		
		private System.Nullable<decimal> _DamagesPenalty;
		
		private System.Nullable<decimal> _LowFuelPenalty;
		
		private System.Nullable<decimal> _RoadOffencePenalty;
		
		private System.Nullable<decimal> _LateReturnPenalty;
		
		private System.Nullable<int> _NumberOfKm;
		
		private System.Nullable<int> _NumberOfDays;
		
		private string _Notes;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<Vehicle> _Vehicle;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRentalChanging(int value);
    partial void OnIdRentalChanged();
    partial void OnIdCustomerChanging(System.Nullable<int> value);
    partial void OnIdCustomerChanged();
    partial void OnIdVehicleChanging(System.Nullable<int> value);
    partial void OnIdVehicleChanged();
    partial void OnRentalExpStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRentalExpStartDateChanged();
    partial void OnRentalExpEndtDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRentalExpEndtDateChanged();
    partial void OnRentalActStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRentalActStartDateChanged();
    partial void OnRentalActEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRentalActEndDateChanged();
    partial void OnDamagesPenaltyChanging(System.Nullable<decimal> value);
    partial void OnDamagesPenaltyChanged();
    partial void OnLowFuelPenaltyChanging(System.Nullable<decimal> value);
    partial void OnLowFuelPenaltyChanged();
    partial void OnRoadOffencePenaltyChanging(System.Nullable<decimal> value);
    partial void OnRoadOffencePenaltyChanged();
    partial void OnLateReturnPenaltyChanging(System.Nullable<decimal> value);
    partial void OnLateReturnPenaltyChanged();
    partial void OnNumberOfKmChanging(System.Nullable<int> value);
    partial void OnNumberOfKmChanged();
    partial void OnNumberOfDaysChanging(System.Nullable<int> value);
    partial void OnNumberOfDaysChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Rental()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Vehicle = default(EntityRef<Vehicle>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRental", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdRental
		{
			get
			{
				return this._IdRental;
			}
			set
			{
				if ((this._IdRental != value))
				{
					this.OnIdRentalChanging(value);
					this.SendPropertyChanging();
					this._IdRental = value;
					this.SendPropertyChanged("IdRental");
					this.OnIdRentalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", DbType="Int")]
		public System.Nullable<int> IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCustomerChanging(value);
					this.SendPropertyChanging();
					this._IdCustomer = value;
					this.SendPropertyChanged("IdCustomer");
					this.OnIdCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVehicle", DbType="Int")]
		public System.Nullable<int> IdVehicle
		{
			get
			{
				return this._IdVehicle;
			}
			set
			{
				if ((this._IdVehicle != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVehicleChanging(value);
					this.SendPropertyChanging();
					this._IdVehicle = value;
					this.SendPropertyChanged("IdVehicle");
					this.OnIdVehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalExpStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RentalExpStartDate
		{
			get
			{
				return this._RentalExpStartDate;
			}
			set
			{
				if ((this._RentalExpStartDate != value))
				{
					this.OnRentalExpStartDateChanging(value);
					this.SendPropertyChanging();
					this._RentalExpStartDate = value;
					this.SendPropertyChanged("RentalExpStartDate");
					this.OnRentalExpStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalExpEndtDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RentalExpEndtDate
		{
			get
			{
				return this._RentalExpEndtDate;
			}
			set
			{
				if ((this._RentalExpEndtDate != value))
				{
					this.OnRentalExpEndtDateChanging(value);
					this.SendPropertyChanging();
					this._RentalExpEndtDate = value;
					this.SendPropertyChanged("RentalExpEndtDate");
					this.OnRentalExpEndtDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalActStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RentalActStartDate
		{
			get
			{
				return this._RentalActStartDate;
			}
			set
			{
				if ((this._RentalActStartDate != value))
				{
					this.OnRentalActStartDateChanging(value);
					this.SendPropertyChanging();
					this._RentalActStartDate = value;
					this.SendPropertyChanged("RentalActStartDate");
					this.OnRentalActStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalActEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RentalActEndDate
		{
			get
			{
				return this._RentalActEndDate;
			}
			set
			{
				if ((this._RentalActEndDate != value))
				{
					this.OnRentalActEndDateChanging(value);
					this.SendPropertyChanging();
					this._RentalActEndDate = value;
					this.SendPropertyChanged("RentalActEndDate");
					this.OnRentalActEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DamagesPenalty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DamagesPenalty
		{
			get
			{
				return this._DamagesPenalty;
			}
			set
			{
				if ((this._DamagesPenalty != value))
				{
					this.OnDamagesPenaltyChanging(value);
					this.SendPropertyChanging();
					this._DamagesPenalty = value;
					this.SendPropertyChanged("DamagesPenalty");
					this.OnDamagesPenaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowFuelPenalty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LowFuelPenalty
		{
			get
			{
				return this._LowFuelPenalty;
			}
			set
			{
				if ((this._LowFuelPenalty != value))
				{
					this.OnLowFuelPenaltyChanging(value);
					this.SendPropertyChanging();
					this._LowFuelPenalty = value;
					this.SendPropertyChanged("LowFuelPenalty");
					this.OnLowFuelPenaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoadOffencePenalty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RoadOffencePenalty
		{
			get
			{
				return this._RoadOffencePenalty;
			}
			set
			{
				if ((this._RoadOffencePenalty != value))
				{
					this.OnRoadOffencePenaltyChanging(value);
					this.SendPropertyChanging();
					this._RoadOffencePenalty = value;
					this.SendPropertyChanged("RoadOffencePenalty");
					this.OnRoadOffencePenaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateReturnPenalty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LateReturnPenalty
		{
			get
			{
				return this._LateReturnPenalty;
			}
			set
			{
				if ((this._LateReturnPenalty != value))
				{
					this.OnLateReturnPenaltyChanging(value);
					this.SendPropertyChanging();
					this._LateReturnPenalty = value;
					this.SendPropertyChanged("LateReturnPenalty");
					this.OnLateReturnPenaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfKm", DbType="Int")]
		public System.Nullable<int> NumberOfKm
		{
			get
			{
				return this._NumberOfKm;
			}
			set
			{
				if ((this._NumberOfKm != value))
				{
					this.OnNumberOfKmChanging(value);
					this.SendPropertyChanging();
					this._NumberOfKm = value;
					this.SendPropertyChanged("NumberOfKm");
					this.OnNumberOfKmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Int")]
		public System.Nullable<int> NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rental_Invoice", Storage="_Invoices", ThisKey="IdRental", OtherKey="IdRental")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Rental", Storage="_Vehicle", ThisKey="IdVehicle", OtherKey="IdVehicle", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.Rentals.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.Rentals.Add(this);
						this._IdVehicle = value.IdVehicle;
					}
					else
					{
						this._IdVehicle = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Rental", Storage="_Customer", ThisKey="IdCustomer", OtherKey="IdCustomer", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Rentals.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Rentals.Add(this);
						this._IdCustomer = value.IdCustomer;
					}
					else
					{
						this._IdCustomer = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Rental = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Rental = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdRole;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRoleChanging(int value);
    partial void OnIdRoleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRole", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdRole
		{
			get
			{
				return this._IdRole;
			}
			set
			{
				if ((this._IdRole != value))
				{
					this.OnIdRoleChanging(value);
					this.SendPropertyChanging();
					this._IdRole = value;
					this.SendPropertyChanged("IdRole");
					this.OnIdRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Employee", Storage="_Employees", ThisKey="IdRole", OtherKey="IdRole")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVehicle;
		
		private System.Nullable<int> _IdCategory;
		
		private string _Manufacturer;
		
		private string _Model;
		
		private string _RegistrationNo;
		
		private string _Status;
		
		private string _Color;
		
		private string _Description;
		
		private System.Nullable<decimal> _Odometer;
		
		private string _Year;
		
		private string _Notes;
		
		private string _ImageFilePath;
		
		private EntitySet<Rental> _Rentals;
		
		private EntityRef<VehicleCategory> _VehicleCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVehicleChanging(int value);
    partial void OnIdVehicleChanged();
    partial void OnIdCategoryChanging(System.Nullable<int> value);
    partial void OnIdCategoryChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnRegistrationNoChanging(string value);
    partial void OnRegistrationNoChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOdometerChanging(System.Nullable<decimal> value);
    partial void OnOdometerChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnImageFilePathChanging(string value);
    partial void OnImageFilePathChanged();
    #endregion
		
		public Vehicle()
		{
			this._Rentals = new EntitySet<Rental>(new Action<Rental>(this.attach_Rentals), new Action<Rental>(this.detach_Rentals));
			this._VehicleCategory = default(EntityRef<VehicleCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVehicle", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVehicle
		{
			get
			{
				return this._IdVehicle;
			}
			set
			{
				if ((this._IdVehicle != value))
				{
					this.OnIdVehicleChanging(value);
					this.SendPropertyChanging();
					this._IdVehicle = value;
					this.SendPropertyChanged("IdVehicle");
					this.OnIdVehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategory", DbType="Int")]
		public System.Nullable<int> IdCategory
		{
			get
			{
				return this._IdCategory;
			}
			set
			{
				if ((this._IdCategory != value))
				{
					if (this._VehicleCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoryChanging(value);
					this.SendPropertyChanging();
					this._IdCategory = value;
					this.SendPropertyChanged("IdCategory");
					this.OnIdCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(50)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNo", DbType="VarChar(50)")]
		public string RegistrationNo
		{
			get
			{
				return this._RegistrationNo;
			}
			set
			{
				if ((this._RegistrationNo != value))
				{
					this.OnRegistrationNoChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNo = value;
					this.SendPropertyChanged("RegistrationNo");
					this.OnRegistrationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Odometer", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Odometer
		{
			get
			{
				return this._Odometer;
			}
			set
			{
				if ((this._Odometer != value))
				{
					this.OnOdometerChanging(value);
					this.SendPropertyChanging();
					this._Odometer = value;
					this.SendPropertyChanged("Odometer");
					this.OnOdometerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NChar(4)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFilePath", DbType="VarChar(MAX)")]
		public string ImageFilePath
		{
			get
			{
				return this._ImageFilePath;
			}
			set
			{
				if ((this._ImageFilePath != value))
				{
					this.OnImageFilePathChanging(value);
					this.SendPropertyChanging();
					this._ImageFilePath = value;
					this.SendPropertyChanged("ImageFilePath");
					this.OnImageFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Rental", Storage="_Rentals", ThisKey="IdVehicle", OtherKey="IdVehicle")]
		public EntitySet<Rental> Rentals
		{
			get
			{
				return this._Rentals;
			}
			set
			{
				this._Rentals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleCategory_Vehicle", Storage="_VehicleCategory", ThisKey="IdCategory", OtherKey="IdCategory", IsForeignKey=true)]
		public VehicleCategory VehicleCategory
		{
			get
			{
				return this._VehicleCategory.Entity;
			}
			set
			{
				VehicleCategory previousValue = this._VehicleCategory.Entity;
				if (((previousValue != value) 
							|| (this._VehicleCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleCategory.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._VehicleCategory.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._IdCategory = value.IdCategory;
					}
					else
					{
						this._IdCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("VehicleCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rentals(Rental entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_Rentals(Rental entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCustomer;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _LicenceNumber;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _Status;
		
		private string _Email;
		
		private string _Mobile;
		
		private string _Notes;
		
		private EntitySet<Rental> _Rentals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCustomerChanging(int value);
    partial void OnIdCustomerChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLicenceNumberChanging(string value);
    partial void OnLicenceNumberChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Customer()
		{
			this._Rentals = new EntitySet<Rental>(new Action<Rental>(this.attach_Rentals), new Action<Rental>(this.detach_Rentals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					this.OnIdCustomerChanging(value);
					this.SendPropertyChanging();
					this._IdCustomer = value;
					this.SendPropertyChanged("IdCustomer");
					this.OnIdCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenceNumber", DbType="VarChar(50)")]
		public string LicenceNumber
		{
			get
			{
				return this._LicenceNumber;
			}
			set
			{
				if ((this._LicenceNumber != value))
				{
					this.OnLicenceNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenceNumber = value;
					this.SendPropertyChanged("LicenceNumber");
					this.OnLicenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Rental", Storage="_Rentals", ThisKey="IdCustomer", OtherKey="IdCustomer")]
		public EntitySet<Rental> Rentals
		{
			get
			{
				return this._Rentals;
			}
			set
			{
				this._Rentals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rentals(Rental entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Rentals(Rental entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEmp;
		
		private string _FirstName;
		
		private string _LastName;
		
		private int _IdRole;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _DateofHire;
		
		private string _EmploymentType;
		
		private string _Gender;
		
		private System.Nullable<decimal> _HourlyWage;
		
		private string _Password;
		
		private string _Qualification;
		
		private string _TaxCode;
		
		private System.Nullable<char> _IsKiwiSaver;
		
		private System.Nullable<int> _KiwiSaverContrRate;
		
		private System.Nullable<int> _EmployerContrRate;
		
		private string _Notes;
		
		private EntitySet<Payroll> _Payrolls;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmpChanging(int value);
    partial void OnIdEmpChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIdRoleChanging(int value);
    partial void OnIdRoleChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDateofHireChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofHireChanged();
    partial void OnEmploymentTypeChanging(string value);
    partial void OnEmploymentTypeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnHourlyWageChanging(System.Nullable<decimal> value);
    partial void OnHourlyWageChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnQualificationChanging(string value);
    partial void OnQualificationChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnIsKiwiSaverChanging(System.Nullable<char> value);
    partial void OnIsKiwiSaverChanged();
    partial void OnKiwiSaverContrRateChanging(System.Nullable<int> value);
    partial void OnKiwiSaverContrRateChanged();
    partial void OnEmployerContrRateChanging(System.Nullable<int> value);
    partial void OnEmployerContrRateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Employee()
		{
			this._Payrolls = new EntitySet<Payroll>(new Action<Payroll>(this.attach_Payrolls), new Action<Payroll>(this.detach_Payrolls));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEmp
		{
			get
			{
				return this._IdEmp;
			}
			set
			{
				if ((this._IdEmp != value))
				{
					this.OnIdEmpChanging(value);
					this.SendPropertyChanging();
					this._IdEmp = value;
					this.SendPropertyChanged("IdEmp");
					this.OnIdEmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRole", DbType="Int NOT NULL")]
		public int IdRole
		{
			get
			{
				return this._IdRole;
			}
			set
			{
				if ((this._IdRole != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRoleChanging(value);
					this.SendPropertyChanging();
					this._IdRole = value;
					this.SendPropertyChanged("IdRole");
					this.OnIdRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofHire", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateofHire
		{
			get
			{
				return this._DateofHire;
			}
			set
			{
				if ((this._DateofHire != value))
				{
					this.OnDateofHireChanging(value);
					this.SendPropertyChanging();
					this._DateofHire = value;
					this.SendPropertyChanged("DateofHire");
					this.OnDateofHireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentType", DbType="VarChar(100)")]
		public string EmploymentType
		{
			get
			{
				return this._EmploymentType;
			}
			set
			{
				if ((this._EmploymentType != value))
				{
					this.OnEmploymentTypeChanging(value);
					this.SendPropertyChanging();
					this._EmploymentType = value;
					this.SendPropertyChanged("EmploymentType");
					this.OnEmploymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(100)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyWage", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> HourlyWage
		{
			get
			{
				return this._HourlyWage;
			}
			set
			{
				if ((this._HourlyWage != value))
				{
					this.OnHourlyWageChanging(value);
					this.SendPropertyChanging();
					this._HourlyWage = value;
					this.SendPropertyChanged("HourlyWage");
					this.OnHourlyWageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qualification", DbType="VarChar(100)")]
		public string Qualification
		{
			get
			{
				return this._Qualification;
			}
			set
			{
				if ((this._Qualification != value))
				{
					this.OnQualificationChanging(value);
					this.SendPropertyChanging();
					this._Qualification = value;
					this.SendPropertyChanged("Qualification");
					this.OnQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="VarChar(100)")]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKiwiSaver", DbType="NChar(1)")]
		public System.Nullable<char> IsKiwiSaver
		{
			get
			{
				return this._IsKiwiSaver;
			}
			set
			{
				if ((this._IsKiwiSaver != value))
				{
					this.OnIsKiwiSaverChanging(value);
					this.SendPropertyChanging();
					this._IsKiwiSaver = value;
					this.SendPropertyChanged("IsKiwiSaver");
					this.OnIsKiwiSaverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KiwiSaverContrRate", DbType="Int")]
		public System.Nullable<int> KiwiSaverContrRate
		{
			get
			{
				return this._KiwiSaverContrRate;
			}
			set
			{
				if ((this._KiwiSaverContrRate != value))
				{
					this.OnKiwiSaverContrRateChanging(value);
					this.SendPropertyChanging();
					this._KiwiSaverContrRate = value;
					this.SendPropertyChanged("KiwiSaverContrRate");
					this.OnKiwiSaverContrRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerContrRate", DbType="Int")]
		public System.Nullable<int> EmployerContrRate
		{
			get
			{
				return this._EmployerContrRate;
			}
			set
			{
				if ((this._EmployerContrRate != value))
				{
					this.OnEmployerContrRateChanging(value);
					this.SendPropertyChanging();
					this._EmployerContrRate = value;
					this.SendPropertyChanged("EmployerContrRate");
					this.OnEmployerContrRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Payroll", Storage="_Payrolls", ThisKey="IdEmp", OtherKey="IdEmployee")]
		public EntitySet<Payroll> Payrolls
		{
			get
			{
				return this._Payrolls;
			}
			set
			{
				this._Payrolls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Employee", Storage="_Role", ThisKey="IdRole", OtherKey="IdRole", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._IdRole = value.IdRole;
					}
					else
					{
						this._IdRole = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payrolls(Payroll entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Payrolls(Payroll entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Rentals")]
	public partial class v_Rental
	{
		
		private int _IdRental;
		
		private System.Nullable<int> _IdCustomer;
		
		private System.Nullable<int> _IdVehicle;
		
		private System.Nullable<System.DateTime> _RentalExpStartDate;
		
		private System.Nullable<System.DateTime> _RentalExpEndtDate;
		
		private System.Nullable<System.DateTime> _RentalActStartDate;
		
		private System.Nullable<System.DateTime> _RentalActEndDate;
		
		private System.Nullable<decimal> _DamagesPenalty;
		
		private System.Nullable<decimal> _LowFuelPenalty;
		
		private System.Nullable<decimal> _RoadOffencePenalty;
		
		private System.Nullable<decimal> _LateReturnPenalty;
		
		private System.Nullable<int> _NumberOfKm;
		
		private System.Nullable<int> _NumberOfDays;
		
		private string _Notes;
		
		private string _ModelManufacturer;
		
		private string _Category;
		
		private System.Nullable<decimal> _DailyRate;
		
		public v_Rental()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRental", DbType="Int NOT NULL")]
		public int IdRental
		{
			get
			{
				return this._IdRental;
			}
			set
			{
				if ((this._IdRental != value))
				{
					this._IdRental = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", DbType="Int")]
		public System.Nullable<int> IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					this._IdCustomer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVehicle", DbType="Int")]
		public System.Nullable<int> IdVehicle
		{
			get
			{
				return this._IdVehicle;
			}
			set
			{
				if ((this._IdVehicle != value))
				{
					this._IdVehicle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalExpStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RentalExpStartDate
		{
			get
			{
				return this._RentalExpStartDate;
			}
			set
			{
				if ((this._RentalExpStartDate != value))
				{
					this._RentalExpStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalExpEndtDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RentalExpEndtDate
		{
			get
			{
				return this._RentalExpEndtDate;
			}
			set
			{
				if ((this._RentalExpEndtDate != value))
				{
					this._RentalExpEndtDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalActStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RentalActStartDate
		{
			get
			{
				return this._RentalActStartDate;
			}
			set
			{
				if ((this._RentalActStartDate != value))
				{
					this._RentalActStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalActEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RentalActEndDate
		{
			get
			{
				return this._RentalActEndDate;
			}
			set
			{
				if ((this._RentalActEndDate != value))
				{
					this._RentalActEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DamagesPenalty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DamagesPenalty
		{
			get
			{
				return this._DamagesPenalty;
			}
			set
			{
				if ((this._DamagesPenalty != value))
				{
					this._DamagesPenalty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowFuelPenalty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LowFuelPenalty
		{
			get
			{
				return this._LowFuelPenalty;
			}
			set
			{
				if ((this._LowFuelPenalty != value))
				{
					this._LowFuelPenalty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoadOffencePenalty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RoadOffencePenalty
		{
			get
			{
				return this._RoadOffencePenalty;
			}
			set
			{
				if ((this._RoadOffencePenalty != value))
				{
					this._RoadOffencePenalty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateReturnPenalty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LateReturnPenalty
		{
			get
			{
				return this._LateReturnPenalty;
			}
			set
			{
				if ((this._LateReturnPenalty != value))
				{
					this._LateReturnPenalty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfKm", DbType="Int")]
		public System.Nullable<int> NumberOfKm
		{
			get
			{
				return this._NumberOfKm;
			}
			set
			{
				if ((this._NumberOfKm != value))
				{
					this._NumberOfKm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Int")]
		public System.Nullable<int> NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this._NumberOfDays = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelManufacturer", DbType="VarChar(103)")]
		public string ModelManufacturer
		{
			get
			{
				return this._ModelManufacturer;
			}
			set
			{
				if ((this._ModelManufacturer != value))
				{
					this._ModelManufacturer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyRate", DbType="Money")]
		public System.Nullable<decimal> DailyRate
		{
			get
			{
				return this._DailyRate;
			}
			set
			{
				if ((this._DailyRate != value))
				{
					this._DailyRate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Vehicles")]
	public partial class v_Vehicle
	{
		
		private int _IdVehicle;
		
		private System.Nullable<int> _IdCategory;
		
		private string _Manufacturer;
		
		private string _Model;
		
		private string _RegistrationNo;
		
		private string _Status;
		
		private string _Color;
		
		private string _Description;
		
		private System.Nullable<decimal> _Odometer;
		
		private string _Year;
		
		private string _Notes;
		
		private string _ImageFilePath;
		
		private string _CategoryName;
		
		private string _CategoryDescription;
		
		private System.Nullable<decimal> _DailyRate;
		
		public v_Vehicle()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVehicle", DbType="Int NOT NULL")]
		public int IdVehicle
		{
			get
			{
				return this._IdVehicle;
			}
			set
			{
				if ((this._IdVehicle != value))
				{
					this._IdVehicle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategory", DbType="Int")]
		public System.Nullable<int> IdCategory
		{
			get
			{
				return this._IdCategory;
			}
			set
			{
				if ((this._IdCategory != value))
				{
					this._IdCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(50)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this._Manufacturer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNo", DbType="VarChar(50)")]
		public string RegistrationNo
		{
			get
			{
				return this._RegistrationNo;
			}
			set
			{
				if ((this._RegistrationNo != value))
				{
					this._RegistrationNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType= "VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Odometer", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Odometer
		{
			get
			{
				return this._Odometer;
			}
			set
			{
				if ((this._Odometer != value))
				{
					this._Odometer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NChar(4)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFilePath", DbType="VarChar(MAX)")]
		public string ImageFilePath
		{
			get
			{
				return this._ImageFilePath;
			}
			set
			{
				if ((this._ImageFilePath != value))
				{
					this._ImageFilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(100)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDescription", DbType="VarChar(MAX)")]
		public string CategoryDescription
		{
			get
			{
				return this._CategoryDescription;
			}
			set
			{
				if ((this._CategoryDescription != value))
				{
					this._CategoryDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyRate", DbType="Money")]
		public System.Nullable<decimal> DailyRate
		{
			get
			{
				return this._DailyRate;
			}
			set
			{
				if ((this._DailyRate != value))
				{
					this._DailyRate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
